Starting audit...
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:5:8: Unused import - main.Library. [UnusedImports]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:20:17: Parameter podcasts should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:20:46: Parameter allAnouncements should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:28:42: Parameter episodes should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:47:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'addPodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'addPodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:47:31: Parameter podcast should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:62:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'addAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'addAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:62:36: Parameter announcement should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:75:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'removeAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'removeAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:75:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:75:39: Parameter announcementName should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:86:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'removePodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'removePodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:86:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:86:34: Parameter podcast should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:98:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'getHostPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'getHostPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Host.java:102:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'getPodcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'getPodcasts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:3:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:4:8: Unused import - com.fasterxml.jackson.databind.node.ArrayNode. [UnusedImports]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:6:12: Using the '.*' form of import should be avoided - main.*. [AvoidStarImport]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:9:8: Unused import - java.time.DateTimeException. [UnusedImports]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:42:45: Parameter songs should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:55:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'addAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'addAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:55:29: Parameter album should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:68:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'addEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'addEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:68:29: Parameter event should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:68:42: Parameter resultNode should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:81:49: '28' is a magic number. [MagicNumber]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:86:38: '12' is a magic number. [MagicNumber]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:91:24: '1900' is a magic number. [MagicNumber]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:91:39: '2023' is a magic number. [MagicNumber]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:109:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'addMerch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'addMerch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:109:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:110:20: 'merch' hides a field. [HiddenField]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:123:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'removeAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'removeAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:123:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:123:32: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:123:57: Parameter library should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:147:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'removeEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'removeEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:147:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:147:32: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:158:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'getAllLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'getAllLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:158:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:166:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'getAlbums' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'getAlbums' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:170:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'getArtistPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'getArtistPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/Artist.java:174:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:6:12: Using the '.*' form of import should be avoided - main.*. [AvoidStarImport]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:7:22: Using the '.*' form of import should be avoided - main.UserPages.*. [AvoidStarImport]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:10:8: Unused import - java.util.LinkedHashMap. [UnusedImports]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:144: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:158: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:168:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:515: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:525: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:774:55: Parameter arrayNode should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:780:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'printCurrentPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'printCurrentPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:780:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:803:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'changePage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'changePage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:803:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:858:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:862:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Users/User.java:866:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFollowingPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFollowingPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/SearchBar.java:8:8: Unused import - java.util.LinkedHashMap. [UnusedImports]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Main.java:75:5: Method length is 182 lines (max allowed is 150). [MethodLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Merch.java:17:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Merch.java:21:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Merch.java:25:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:69:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:156:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'load' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'load' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:156:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:588: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:606: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:754: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:810: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:940:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setUserStatus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setUserStatus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:940:31: Parameter userStatus should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:944:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setLastCommandTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setLastCommandTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:944:41: Parameter lastCommandTimestamp should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:948:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCurrentAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCurrentAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Player.java:952:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getSongIndexAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getSongIndexAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HomePage.java:13:21: Parameter likedSongs should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HomePage.java:13:49: Parameter followingPlaylists should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HomePage.java:17:5: Class 'HomePage' looks like designed for extension (can be subclassed), but the method 'getFirst5LikedSongNames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HomePage' final or making the method 'getFirst5LikedSongNames' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HomePage.java:20:24: '5' is a magic number. [MagicNumber]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HomePage.java:24:5: Class 'HomePage' looks like designed for extension (can be subclassed), but the method 'getFirst5FollowingPlaylistNames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HomePage' final or making the method 'getFirst5FollowingPlaylistNames' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HomePage.java:27:24: '5' is a magic number. [MagicNumber]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HomePage.java:31:5: Class 'HomePage' looks like designed for extension (can be subclassed), but the method 'getContent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HomePage' final or making the method 'getContent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HomePage.java:32:28: Parameter resultNode should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/LikedContentPage.java:12:29: Parameter likedSongs should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/LikedContentPage.java:12:57: Parameter followingPlaylists should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/LikedContentPage.java:15:5: Class 'LikedContentPage' looks like designed for extension (can be subclassed), but the method 'getLikedSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LikedContentPage' final or making the method 'getLikedSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/LikedContentPage.java:18:5: Class 'LikedContentPage' looks like designed for extension (can be subclassed), but the method 'getFollowingPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LikedContentPage' final or making the method 'getFollowingPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/LikedContentPage.java:21:5: Class 'LikedContentPage' looks like designed for extension (can be subclassed), but the method 'getContent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LikedContentPage' final or making the method 'getContent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/LikedContentPage.java:22:28: Parameter resultNode should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/ArtistPage.java:31:5: Class 'ArtistPage' looks like designed for extension (can be subclassed), but the method 'getContent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ArtistPage' final or making the method 'getContent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/ArtistPage.java:32:28: Parameter resultNode should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/ArtistPage.java:62:5: Class 'ArtistPage' looks like designed for extension (can be subclassed), but the method 'increaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ArtistPage' final or making the method 'increaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/ArtistPage.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/ArtistPage.java:65:5: Class 'ArtistPage' looks like designed for extension (can be subclassed), but the method 'decreaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ArtistPage' final or making the method 'decreaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/ArtistPage.java:65:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/ArtistPage.java:69:5: Class 'ArtistPage' looks like designed for extension (can be subclassed), but the method 'getListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ArtistPage' final or making the method 'getListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:4:12: Using the '.*' form of import should be avoided - main.*. [AvoidStarImport]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:14:21: Parameter podcasts should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:14:50: Parameter announcements should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:21:5: Class 'HostPage' looks like designed for extension (can be subclassed), but the method 'getContent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HostPage' final or making the method 'getContent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:22:28: Parameter resultNode should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:27: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:31: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:40: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:49:9: Class 'HostPage' looks like designed for extension (can be subclassed), but the method 'increaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HostPage' final or making the method 'increaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:49:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:52:5: Class 'HostPage' looks like designed for extension (can be subclassed), but the method 'decreaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HostPage' final or making the method 'decreaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:55:5: Class 'HostPage' looks like designed for extension (can be subclassed), but the method 'getListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HostPage' final or making the method 'getListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/HostPage.java:58:5: Class 'HostPage' looks like designed for extension (can be subclassed), but the method 'getPodcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HostPage' final or making the method 'getPodcasts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/Page.java:10:28: Variable 'likedSongs' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/Page.java:11:32: Variable 'followingPlaylists' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/Page.java:13:17: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/Page.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/UserPages/Page.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:246:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:246:24: Parameter age should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:250:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:250:25: Parameter city should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:254:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:254:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:258:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:258:32: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:262:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:262:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:266:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:266:26: Parameter songs should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:270:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getDate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getDate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:274:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:278:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getNextPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getNextPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Command.java:282:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getEpisodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getEpisodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:55:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'getAllLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'getAllLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:63:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'increaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'increaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:67:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'decreaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'decreaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:71:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:75:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'getSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'getSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:79:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'setSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'setSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:79:26: Parameter songs should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:83:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'getListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'getListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:87:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'getReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'getReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Album.java:91:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Podcast.java:18:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'increaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'increaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Podcast.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Podcast.java:22:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'decreaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'decreaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Podcast.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Podcast.java:34:5: Class 'Podcast' looks like designed for extension (can be subclassed), but the method 'getListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Podcast' final or making the method 'getListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Playlist.java:23:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'increaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'increaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Playlist.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Playlist.java:27:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'decreaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'decreaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Playlist.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Playlist.java:45:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getTotalLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getTotalLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Playlist.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Playlist.java:101:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:214:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:278: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:318:36: Parameter artist should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:329:37: Parameter artist should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:338:40: Parameter user should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:347:39: Parameter host should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:377: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:419:35: Parameter command should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:419:52: Parameter resultNode should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:755:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:792:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:835:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:861:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Library.java:893:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Event.java:3:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Event.java:5:8: Unused import - java.time.LocalDate. [UnusedImports]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Event.java:6:8: Unused import - java.time.format.DateTimeFormatter. [UnusedImports]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Event.java:7:8: Unused import - java.time.format.DateTimeParseException. [UnusedImports]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Event.java:15: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Event.java:22:5: Class 'Event' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Event' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Event.java:26:5: Class 'Event' looks like designed for extension (can be subclassed), but the method 'getDate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Event' final or making the method 'getDate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Event.java:30:5: Class 'Event' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Event' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Event.java:34:5: Class 'Event' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Event' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Episode.java:16:20: Parameter name should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Episode.java:17:20: Parameter duration should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Episode.java:18:20: Parameter description should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Episode.java:40:5: Class 'Episode' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Episode' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:25:17: Parameter name should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:26:17: Parameter duration should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:27:17: Parameter album should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:28:17: Parameter tags should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:29:17: Parameter lyrics should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:30:17: Parameter genre should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:31:17: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:32:17: Parameter artist should be final. [FinalParameters]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:117:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'increaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'increaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:121:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'decreaseListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'decreaseListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:121:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:140:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getListeners' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getListeners' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Song.java:144:5: Class 'Song' looks like designed for extension (can be subclassed), but the method 'getArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Song' final or making the method 'getArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Announcement.java:14:5: Class 'Announcement' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Announcement' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/duti/Desktop/OOP/etapa2/./src/main/Announcement.java:18:5: Class 'Announcement' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Announcement' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 208 errors.
